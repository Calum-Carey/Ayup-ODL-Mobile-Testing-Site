@charset "UTF-8";
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

@font-face {
  font-family: 'fontello';
  src: url("/assets/fonts/icons/fontello.eot?66327814");
  src: url("/assets/fonts/icons/fontello.eot?66327814#iefix") format("embedded-opentype"), url("/assets/fonts/icons/fontello.woff2?66327814") format("woff2"), url("/assets/fonts/icons/fontello.woff?66327814") format("woff"), url("/assets/fonts/icons/fontello.ttf?66327814") format("truetype"), url("/assets/fonts/icons/fontello.svg?66327814#fontello") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?66327814#fontello') format('svg');
  }
}
*/
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-mail:before {
  content: '\e800';
}

/* '' */
.icon-arrow:before {
  content: '\e801';
}

/* '' */
.icon-ayup_icon:before {
  content: '\e802';
}

/* '' */
.icon-os_logo:before {
  content: '\e803';
}

/* '' */
.icon-resolution:before {
  content: '\e804';
}

/* '' */
.icon-safari_logo:before {
  content: '\e805';
}

/* '' */
.icon-bullet-square:before {
  content: '\e806';
}

/* '' */
.icon-circle-bullet:before {
  content: '\e807';
}

/* '' */
.icon-double-square-bullet:before {
  content: '\e809';
}

/* '' */
.icon-half-circle-bullet:before {
  content: '\e80a';
}

/* '' */
.icon-mobile__nav:before {
  content: '\e80b';
}

/* '' */
.icon-more-info:before {
  content: '\e80c';
}

/* '' */
.icon-squiggle:before {
  content: '\e80d';
}

/* '' */
.icon-twitter:before {
  content: '\e80e';
}

/* '' */
.icon-apple:before {
  content: '\f179';
}

/* '' */
@font-face {
  font-family: 'GreyCliff_Regular';
  src: url("../fonts/greycliff-cf-regular-webfont.woff2") format("woff2"), url("../fonts/greycliff-cf-regular-webfont.woff") format("woff");
  font-weight: 500;
  font-style: normal;
}

h1 {
  font-size: 2.1rem;
  font-family: "Caveat", cursive;
  color: #111716;
  margin: 0;
  line-height: 1.7;
}

h1.heading--secondary {
  color: #fbefd8;
}

h2 {
  font-size: 1.4rem;
  font-family: "GreyCliff_Regular", serif;
  padding: 1.2rem;
}

h3 {
  font-size: 1.5rem;
  font-family: "Caveat", cursive;
  color: #111716;
  padding: 2.4rem 0;
}

h3--custom {
  color: #e95741;
}

h4 {
  font-size: 1.4rem;
  color: #111716;
}

h5 {
  font-family: "GreyCliff_Regular", serif;
  font-size: 1rem;
  color: #e95741;
}

p, .text--secondary, .text--tertiary {
  font-family: "Cabin", sans-serif;
  font-size: 1rem;
  line-height: 1.7;
  color: #111716;
  padding: 0.6rem 0;
}

p.text--secondary, .text--secondary.text--secondary, .text--tertiary.text--secondary {
  color: #fbefd8;
}

p.text--tertiary, .text--secondary.text--tertiary, .text--tertiary.text--tertiary {
  color: #e95741;
}

.text--lead, .text--lead--secondary, .text--lead--email {
  font-family: "Cabin", sans-serif;
  font-size: 18px;
  color: #111716;
  line-height: 1.7;
}

.text--lead.text--lead--email, .text--lead--secondary.text--lead--email, .text--lead--email.text--lead--email {
  text-decoration: underline;
}

.text--lead.text--lead--secondary, .text--lead--secondary.text--lead--secondary, .text--lead--email.text--lead--secondary {
  color: #fbefd8;
}

a {
  transition: all 0.2s ease-in-out;
  text-decoration: none;
}

a:hover {
  cursor: pointer;
}

.link__ayup-email {
  text-decoration: underline;
}

/* GRID */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-size: 16px;
}

body {
  max-width: 1440px;
}

.container {
  width: 80%;
  margin: 0 auto;
}

@media screen and (max-width: 768px) {
  .container {
    width: 100%;
  }
}

@media screen and (max-width: 768px) {
  .hide-on-tablet {
    display: none !important;
  }
}

.table {
  width: 100%;
  border-collapse: collapse;
}

td {
  text-align: center;
  color: #e95741;
  font-family: "GreyCliff_Regular", serif;
  padding: 10px 0;
}

/*.table__th {
  @media screen and (max-width: 420px) {
    &:before {
      .placeholder {
        clear: both;
        display: block;
        text-align: center;
      }
    }
  }
} */
.table__th, .table__search {
  font-family: "Caveat", cursive;
  color: #fbefd8;
  background-color: #e95741;
  font-size: 20px;
  font-weight: 100;
  padding: 10px 0;
  border: none;
}

.table__th:first-child, .table__search:first-child {
  padding-left: 3rem;
  background-color: #e95741;
}

td:first-child, .table__th:first-child {
  padding-left: 3rem;
}

@media screen and (max-width: 768px) {
  td:first-child, .table__th:first-child {
    padding-left: 1rem;
  }
}

.row:nth-child(2n) {
  background-color: rgba(251, 239, 216, 0.5);
}

@media (max-width: 768px) {
  tr th:nth-child(3), tr td:nth-child(3) {
    display: none;
  }
}

.table__expand {
  display: table;
  width: 100%;
  overflow: hidden;
  list-style: none;
  padding: 6rem 12rem;
  /* HELP!!
  &--list1:after, &--list2:after, &--list3:after, &--list4:after, &--list5:after {
    @media screen and (max-width: 768px) {
      content: none;
    }
  }
  */
}

@media screen and (max-width: 1100px) {
  .table__expand {
    padding: 3rem 6rem;
  }
}

.table__expand--content, .table__expand--media {
  box-sizing: border-box;
  width: 50%;
  display: table-cell;
  vertical-align: middle;
  padding: 0;
  list-style-type: none;
}

.table__expand--media {
  float: right;
}

@media screen and (max-width: 1250px) {
  .table__expand--media {
    display: none;
  }
}

.table__expand--list1 {
  font-family: "Caveat", cursive;
  font-size: 34px;
  padding: 20px 0;
}

.table__expand--list1::before {
  content: '\f179';
  font-family: "fontello";
  padding-right: 1rem;
  vertical-align: middle;
  text-align: center;
}

.table__expand--list2, .table__expand--list3, .table__expand--list4 {
  font-family: "Cabin", sans-serif;
  font-size: 22px;
  padding: 1rem 0;
}

.table__expand--list2::before {
  content: '\e803';
  font-family: "fontello";
  padding-right: 20px;
  vertical-align: middle;
  text-align: center;
}

.table__expand--list3::before {
  content: '\e805';
  font-family: "fontello";
  padding-right: 20px;
  vertical-align: middle;
  text-align: center;
}

.table__expand--list4::before {
  content: '\e804';
  font-family: "fontello";
  padding-right: 20px;
  vertical-align: middle;
  text-align: center;
}

.table__expand--list5 {
  font-family: "Cabin", sans-serif;
  font-size: 20px;
  color: #e95741;
  padding: 1rem 0;
}

.table__expand--list5::before {
  content: '\e802';
  font-family: "fontello";
  padding-right: 20px;
  vertical-align: middle;
  text-align: center;
}

form input {
  font-family: "Caveat", cursive;
  color: #e95741;
  font-size: 20px;
  border-radius: 10px;
  padding: 0 0 0 10px;
  margin: 0px;
  border-style: none;
}

/* @include placeholder($cinnarbar); */
.hero {
  height: 938px;
  max-width: 1440px;
  width: 100%;
  position: relative;
  background-color: #2d383a;
  display: table;
  text-align: center;
  background-image: url("/assets/media/shapes/background-notFont/hero__background.svg");
  background-repeat: no-repeat;
  background-position: 100% 0%;
  overflow: hidden;
}

@media screen and (max-width: 1320px) {
  .hero {
    background-position: -30% -10%;
  }
}

@media screen and (max-width: 1100px) {
  .hero {
    background-position: -15% 0%;
    text-align: center;
  }
}

@media screen and (max-width: 769px) {
  .hero {
    background-position: 15% 0%;
  }
}

@media screen and (max-width: 420px) {
  .hero {
    height: 700px;
    background-image: url("/assets/media/shapes/mobile-shapes-BG.svg");
    background-size: contain;
    background-position: 0% 0%;
  }
}

.hero__content, .hero--handbook {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
}

.hero__logo--img {
  height: 300px;
  width: 300px;
}

.hero--handbook {
  height: 293px;
  max-width: 1440px;
  width: 100%;
  position: relative;
  background-color: #2d383a;
  display: table;
  text-align: center;
  background-image: url("/assets/media/shapes/background-notFont/hero__background.svg");
  background-repeat: no-repeat;
  background-position: 100% 55%;
  overflow: hidden;
}

@media screen and (max-width: 1320px) {
  .hero--handbook {
    background-position: 50% 0%;
  }
}

@media screen and (max-width: 1100px) {
  .hero--handbook {
    background-position: 25% 0%;
    text-align: center;
  }
}

@media screen and (max-width: 769px) {
  .hero--handbook {
    background-position: 15% 0%;
  }
}

@media screen and (max-width: 600px) {
  .hero--handbook {
    background-position: 5% 0%;
  }
}

@media screen and (max-width: 420px) {
  .hero--handbook {
    height: 700px;
    background-image: url("/assets/media/shapes/mobile-shapes-BG.svg");
    background-size: contain;
    background-position: 0% 0%;
  }
}

/*@media screen and (max-width: 420px){
    background-position: 100% -100%;
  }*/
/*.hero__logo {
  display: table-cell;

  &--img {
    position: absolute;
    top: -45%;
  }
}*/
.nav {
  width: 144px;
  position: fixed;
  bottom: 196px;
  left: 0;
  border-radius: 3px;
  z-index: 1;
  background-color: #111716;
  padding: 0 0 30px 0px;
}

@media screen and (max-width: 1439px) {
  .nav {
    display: none;
  }
}

.nav ul {
  background-image: url("/assets/media/shapes/nav_arrow.svg");
  background-position: center bottom;
  background-repeat: no-repeat;
  padding: 0 0 75px 0;
}

.nav__item {
  padding: 2rem 2.5rem 2rem 1.25rem;
}

.nav__item:first-child {
  padding-top: 4rem;
}

.nav a {
  text-decoration: none;
  font-family: "GreyCliff_Regular", serif;
  color: #fbefd8;
  font-size: 22px;
}

.button {
  font-size: 18px;
  padding: 0.5em 1em;
  border-radius: 0.1rem;
  margin-top: 0.5em;
  font-family: "Cabin", sans-serif;
  font-weight: 700;
  display: inline-block;
  text-decoration: none;
  vertical-align: middle;
  color: white;
  background-color: #8a8c77;
}

.button:hover {
  color: #fbefd8;
  background-color: #2d383a;
}

.button__hero {
  font-size: 22px;
  padding: 0.6em 1.2em;
  margin: 0.9em 0;
  font-family: "GreyCliff_Regular", serif;
  background-color: #111716;
  border-bottom: 3px solid #99c9af;
  color: #99c9af;
  display: inline-block;
}

.button__hero:hover {
  color: black;
  background-color: #99c9af;
  border-bottom: 3px solid #111716;
}

.button--secondary {
  margin-left: 1em;
  color: white;
  background-color: #99c9af;
}

.button--secondary:hover {
  color: #fbefd8;
  background-color: #99c9af 0.5;
}

.button--tertiary {
  color: #2d383a;
  background-color: #fbefd8;
}

.button--tertiary:hover {
  color: #fbefd8;
  background-color: #2d383a;
}

/*.button__hero--left-arrow:before {

    position: absolute;
    top: 2px;
    bottom: 6px;
    width: 0;
    height: 0;
    content: '';
    display: inline-block;
    border-right: 1.5rem solid $wood-smoke;
    border-bottom: 1.5rem solid transparent;
    border-top: 1.5rem solid transparent;

}*/
.button__hero--down-arrow:before {
  position: absolute;
  margin-bottom: -60px;
  display: inline-block;
  content: '';
  border-right: 1.5rem solid transparent;
  border-left: 1.5rem solid transparent;
  border-top: 1.5rem solid #111716;
}

.img-responsive {
  max-width: 100%;
  height: auto;
}

.section, .main {
  clear: both;
  max-width: 1440px;
}

@media screen and (max-width: 1320px) {
  .container--alt {
    display: block;
    padding: 6rem 6rem 6rem 12rem !important;
  }
}

@media screen and (max-width: 1100px) {
  .container--alt {
    display: block;
    padding: 6rem 6rem 6rem 9rem !important;
  }
}

@media screen and (max-width: 420px) {
  .container--alt {
    width: 100% !important;
    display: block;
    padding: 4rem 3rem !important;
  }
}

.wrapper {
  display: table;
  width: 100%;
  background-color: #fbefd8;
  margin: 0 auto;
}

@media screen and (max-width: 1000px) {
  .wrapper {
    display: block;
  }
}

.wrapper--secondary {
  background-color: white;
}

.wrapper--tertiary {
  background-color: #e95741;
}

.wrapper__content {
  width: 50%;
  height: auto;
  display: table-cell;
  vertical-align: middle;
  padding: 6rem 6rem 6rem 12rem;
}

@media screen and (max-width: 1320px) {
  .wrapper__content {
    width: 100% !important;
    display: block;
  }
}

@media screen and (max-width: 1100px) {
  .wrapper__content {
    width: 100% !important;
    display: block;
    padding: 6rem 6rem 6rem 9rem !important;
  }
}

@media screen and (max-width: 768px) {
  .wrapper__content {
    width: 100% !important;
    display: block;
    padding: 4rem 4rem 4rem 6rem !important;
  }
}

@media screen and (max-width: 420px) {
  .wrapper__content {
    width: 100% !important;
    display: block;
    padding: 4rem 3rem !important;
  }
}

.wrapper__content--alt {
  padding: 6rem 12rem 6rem 6rem;
}

@media screen and (max-width: 1320px) {
  .wrapper__content--alt {
    display: block;
    padding: 0 !important;
  }
}

.wrapper__content--left {
  width: 55%;
  padding: 6rem 6rem 6rem 12rem;
}

.wrapper__content--left-alt {
  width: 55%;
  padding: 6rem 3rem 6rem 12rem;
}

.wrapper__content--right {
  width: 55%;
  padding: 6rem 12rem 6rem 6rem;
}

.wrapper__content--secondary {
  background: #99c9af;
}

.wrapper__content--header--false {
  font-size: 2.1rem;
  font-family: "Caveat", cursive;
  color: #111716;
  line-height: 1.7;
}

.wrapper__media {
  max-width: 45%;
  height: auto;
  display: table-cell;
  vertical-align: bottom;
}

@media screen and (max-width: 1320px) {
  .wrapper__media {
    width: 100% !important;
    display: none;
  }
}

.wrapper__media--middle {
  vertical-align: middle;
  padding-left: 10rem;
}

.wrapper__media--top {
  width: 55%;
  vertical-align: top;
  padding-top: 100px;
}

.wrapper__media--heading {
  line-height: 0;
  padding: 1.7rem 0;
}

.wrapper__media--right {
  padding: 6rem;
  vertical-align: middle;
  text-align: right;
}

.wrapper__media--40 {
  padding: 100px 100px 100px 0px;
}

.wrapper__media--red-square {
  max-width: 90%;
  vertical-align: middle;
  text-align: center;
}

.wrapper__media--grey-square {
  width: 80%;
  text-align: center;
  vertical-align: bottom;
}

@media screen and (max-width: 1320px) {
  .wrapper__media--map {
    max-width: 100% !important;
    display: inline-block !important;
  }
}

.wrapper--reverse {
  direction: rtl;
}

.wrapper--reverse .wrapper__media {
  direction: ltr;
}

.wrapper--reverse .wrapper__content {
  direction: ltr;
  padding-right: 100px;
}

@media screen and (max-width: 1320px) {
  .ayup-map {
    width: 100% !important;
  }
}

.wrapper__content--header1:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header1:before {
    display: none;
  }
}

.wrapper__content--header2:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header2:before {
    display: none;
  }
}

.wrapper__content--header3:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header3:before {
    display: none;
  }
}

.wrapper__content--header4:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header4:before {
    display: none;
  }
}

.wrapper__content--header5:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header5:before {
    display: none;
  }
}

.wrapper__content--header6:before {
  content: '\e806';
  font-family: "fontello";
  position: absolute;
  margin-left: -55px;
}

@media screen and (max-width: 420px) {
  .wrapper__content--header6:before {
    display: none;
  }
}

.ayup-map {
  display: block;
  vertical-align: bottom;
}

.footer {
  max-width: 1440px;
  width: 100%;
  height: 196px;
  position: relative;
  display: table;
  background-color: #fbefd8;
  overflow: hidden;
  direction: ltr;
}

.footer__left, .footer__right {
  display: table-cell;
  width: 50%;
  position: relative;
}

.footer__left__image {
  position: absolute;
}

.footer__left__image--shapes {
  top: 10%;
  left: 0%;
}

@media screen and (max-width: 600px) {
  .footer__left__image--shapes {
    display: none;
  }
}

.footer__left__image--social {
  right: 30%;
  top: 40%;
}

@media screen and (max-width: 768px) {
  .footer__left__image--social {
    right: 20%;
  }
}

@media screen and (max-width: 600px) {
  .footer__left__image--social {
    right: 15%;
  }
}

.footer__left__image--social:hover {
  color: #dc8f69;
  cursor: pointer;
}

.footer__right__image {
  position: absolute;
}

@media screen and (max-width: 600px) {
  .footer__right__image {
    display: none;
  }
}

.footer__right__image--rectangle-md {
  bottom: 0%;
  right: 3%;
}

.footer__right__image--arrow {
  top: 15%;
  right: 25%;
}

.footer__right--copyright {
  position: absolute;
  top: 45%;
  left: 15%;
  font-family: "Cabin", sans-serif;
  color: #8a8c77;
  font-size: 18px;
}

.red {
  color: #e95741;
  font-size: 1.5rem;
}

.red__footer {
  font-size: 1.1rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
